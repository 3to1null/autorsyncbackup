#!/bin/bash

#
# @author Teun Ouwehand (teun@nextpertise.nl)
# @company Nextpertise B.V.
# 

#
#  This file is part of autorsyncbackup.
#
#  autorsyncbackup is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  autorsyncbackup is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with autorsyncbackup. If not, see <http://www.gnu.org/licenses/>.
#

# Source the library file
. /usr/share/autorsyncbackup/rsync_lib.sh

# Usage info
show_help() {
cat << EOF
rsyncbackup help

Usage: ${0##*/} [-j] [FILE] [-l] [FILE] [-L]
    
    -h          display this help and exit
    -j JOBDIR	read config file	
    -l LOGDIR	write job output to log files in specified logdir
EOF
}                

# Initialize our own variables:
log=1
config_maxcycles=10

OPTIND=1 # Reset is necessary if getopts was used previously in the script. 
while getopts "hj:l:L" opt; do
    case "$opt" in
        h)
            show_help
            exit 0
            ;;
        j)  job_dir=$OPTARG
            ;;
        l)  log_dir=$OPTARG
            ;;
        L)  log=0
            ;;
        '?')
            show_help >&2
            exit 1
            ;;
    esac
done

# Check for config file
if [[  ! "$job_dir" ]]; then
  printf "Job dir parameter missing\n"
  exit 1
else
  if [ ! -d $job_dir ]; then
    printf 'Job dir does not exists: %s\n' "$job_dir"
    exit 1
  fi
fi

# Check if log is enabled
if [[ "$log" == "1" ]]; then
  if [[  ! "$log_dir" ]]; then
    printf "Log dir parameter missing"
    exit 1
  else
    if [ ! -d $log_dir ]; then
      printf 'Log dir does not exists: %s\n' "$log_dir"
      exit 1
    fi
  fi
fi

startjobs $job_dir
